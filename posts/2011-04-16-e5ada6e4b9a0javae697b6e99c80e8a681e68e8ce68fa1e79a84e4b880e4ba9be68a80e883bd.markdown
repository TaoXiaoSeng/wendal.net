---
comments: true
date: 2011-04-16 21:45:20
layout: post
slug: '%e5%ad%a6%e4%b9%a0java%e6%97%b6%e9%9c%80%e8%a6%81%e6%8e%8c%e6%8f%a1%e7%9a%84%e4%b8%80%e4%ba%9b%e6%8a%80%e8%83%bd'
title: 学习Java时需要掌握的一些技能
permalink: '/270.html'
wordpress_id: 270
categories:
- Java
- 工作
tags:
- bug
- Java
- Maven
- Nutz
- 视频
---

本文并不涉及语法/具体API,就是一些学习方法

**1. 找不到XXX类**
学习Java的路上,找不到类简直就是家常便饭,故,快速找到需要的类非常关键
[Findjar](http://www.findjar.com) 输入类名,一般都能找到
[Maven repo](http://repo1.maven.org/maven2/) 如果能猜到大概的项目,通过Maven中央库肯定是最权威的

**2. 学习XXX框架**
在这个框架满天飞的时代,不懂几个框架都不好意思说是玩Java的
但是,以下事情你是否做过呢:
A. 从源码编译过
B. 跑过官方测试
C. 瞄过源码

找一个好的社区,一起看源码,是很开心的事哦
知其然,也要知其所以然

**3. 找Bug的方法**
你马上就开始debug了? No! No! 请把debug放到最后,当成无计可施的最后手段
System.out.println()才是真正的利器!!
你马上会反驳,println很耗时间的 -- 是的,但帮你理清思路
通过println,打印变量的值/应该经过的分支,帮你一步步理清思路
使用Debug往往是最快解决问题的,但也是最容易让你无法找到问题的根源
良好的Log,是生产环境中必不可少的信息

**4. 常备API**
原本打算列长长的表格,但最近发现Oschina首页就有API链接
[http://www.oschina.net/](http://www.oschina.net/)
页面下方就是 "常用API文档",比较齐全

**5. 分清楚问题的原因**
很多时候,Java程序的问题,更多的是API的问题,而非语法问题
但很多情况下,初学者多以为是语法问题

我简单想出几种类型: 语法问题,编译器导致的语法现象(如自动封包/解包,泛型),API问题,具体操作系统的问题



暂时就想到这么多,呵呵,看来是遇到特定场景才容易想到.
最近迷上录视频,嘻嘻,已经为Nutz录了两集,尽快跟进其他内容.
